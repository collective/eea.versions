* simplify storage of versionId attribute
* all IVersionEnhanced objects have a versionId, by default
* versioned objects implement IVersionEnhanced by default
* no longer assign a versionId on IVersionControl instantiation; this is not
  needed anymore
* rename GetVersions.versions to GetVersions.enumerate_versions
* removed not implemented getVersionNumber from IVersionControl
* renamed extract to _get_info
* optimize getting information in GetVersions
* refactored version_number
* renamed 'newest' to later_versions
* simplified latest_version
* renamed isLatest to is_latest
* renamed oldest to earlier_versions
* get rid of get_versions_api, should use IGetVersions(context) and
  context/@@getVersions
* added a GetVersionsView
* renamed get_latest_version_link to get_latest_versionId
* no longer call IVersionControl in get_latest_version_link, as versionIds are
  always guaranteed
* GetLatestVersionLink and GetVersionId do the same thing; removed
  GetLatestVersionLink
* got rid of @@getVersionId, get_version_id_api and get_version_id(); use
  context/@@getVersions/versionId
* refactored versions_macros; it used getLatestVersionLink like it was
  special; it's not, it just returns the current versionId, as ds_resolveuid
  always returns the real latest version 
* simplified code in generateNewid and _random_id; no longer use UID() to test
  for object identity, as it's not really necessary


TODO
====
* declare attribute versionId and the rest of methods in interface
  IGetVersions; add security assertions
* see if versions_macro is displayed for objects which are not IVersionEnhanced
* refactor portlet_versions, it's redoing extract(); also isVersionEnhanced
  The portlet doesn't show anything if not isVersionEnhanced, so it should be
  easy to refactor with an on-error or something
* refactor based on changes in eea.indicators and eea.dataservice
* revokeVersion reassigns a new random versionId
* rename versionIdHandler
* get rid of GetContextInterfaces, plone has a builtin utility view for that
    * item_interfaces context/@@plone_interface_info; is_video python:item_interfaces.provides('eea.mediacentre.interfaces.IVideo');
* move ds_resolveuid in this package, from eea.dataservice
* fix tests (there's a TODO)
* write test for generateNewId


old storage of versionId:
=========================

#Version ID
ver = annotations.get(VERSION_ID)
if ver is None:
   verData = {VERSION_ID: ''}
   annotations[VERSION_ID] = PersistentDict(verData)
   #_reindex(context)

